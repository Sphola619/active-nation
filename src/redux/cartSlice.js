import { createSlice } from "@reduxjs/toolkit"; // Importing the createSlice function to define a Redux slice

// Initial state for the cart
const initialState = {
  items: [], // Array to hold items added to the cart
  total: 0, // Total price of items in the cart
};

// Creating the cart slice
const cartSlice = createSlice({
  name: "cart", // Name of the slice, used for action type prefixes
  initialState, // Sets the initial state of the slice
  reducers: {
    // Reducer to handle adding items to the cart
    addToCart: (state, action) => {
      // Checks if the item already exists in the cart
      const existingItem = state.items.find((item) => item.id === action.payload.id);
      
      if (existingItem) {
        // If the item exists, increment its quantity
        existingItem.quantity += 1;
      } else {
        // If the item doesn't exist, add it to the cart with an initial quantity of 1
        state.items.push({ ...action.payload, quantity: 1 });
      }

      // Update the total price
      state.total += action.payload.price;
    },
    
    // Reducer to handle clearing the cart
    clearCart: (state) => {
      state.items = []; // Removes all items from the cart
      state.total = 0; // Resets the total price
    },
  },
});

// Exporting the actions generated by createSlice for use in components
export const { addToCart, clearCart } = cartSlice.actions;

// Exporting the cart slice reducer to be included in the store
export default cartSlice.reducer;
